
package com.avectra._2005;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "netForumXMLHttpPost", targetNamespace = "http://www.avectra.com/2005/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NetForumXMLHttpPost {


    /**
     * Get the fundraising goal and achieved amount for a fundraising event participant.
     * 
     * @param eventKey
     * @param customerKey
     * @return
     *     returns com.avectra._2005.EventUserFundraisingDetail
     */
    @WebMethod(operationName = "GetFundraisingEventRegistrationTotal")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public EventUserFundraisingDetail getFundraisingEventRegistrationTotal(
        @WebParam(name = "eventKey", partName = "eventKey")
        String eventKey,
        @WebParam(name = "customerKey", partName = "customerKey")
        String customerKey);

    /**
     * Get a list of donations provided to a fundraising event partifipant.
     * 
     * @param eventKey
     * @param customerKey
     * @return
     *     returns com.avectra._2005.ArrayOfDonation
     */
    @WebMethod(operationName = "GetFundraisingEventDonations")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public ArrayOfDonation getFundraisingEventDonations(
        @WebParam(name = "eventKey", partName = "eventKey")
        String eventKey,
        @WebParam(name = "customerKey", partName = "customerKey")
        String customerKey);

    /**
     * Get a link to a web page that be used to donate on behalf of a fundraising event participant.
     * 
     * @param eventKey
     * @param customerKey
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetFundraisingEventDonationUrl")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String getFundraisingEventDonationUrl(
        @WebParam(name = "eventKey", partName = "eventKey")
        String eventKey,
        @WebParam(name = "customerKey", partName = "customerKey")
        String customerKey);

    /**
     * Retrieves Product Type List
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetProductTypeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetProductTypeList();

    /**
     * Retrieves Product Category List
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetProductCategoryList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetProductCategoryList();

    /**
     * Retrieves Product List; includes price range
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetProductList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetProductList();

    /**
     * Retrieves Product List by name; includes price range
     * 
     * @param productName
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetProductListByName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetProductListByName(
        @WebParam(name = "ProductName", partName = "ProductName")
        String productName);

    /**
     * Retrieves List of product keys
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetProductListKeys")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetProductListKeys();

    /**
     * Retrieves list of all product complements
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetProductComplements")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetProductComplements();

    /**
     * Retrieves list of all product substitutes
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetProductSubstitutes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetProductSubstitutes();

    /**
     * Retrieves Merchandise List.
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetMerchandiseList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetMerchandiseList();

    /**
     * Retrieves Merchandise List without Pricing Control Check.
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetMerchandiseList_Ignore_PC")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetMerchandiseListIgnorePC();

    /**
     * Retrieves Publication List without Pricing Control Check.
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetPublicationList_Ignore_PC")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetPublicationListIgnorePC();

    /**
     * Retrieves Subscription List without Pricing Control Check.
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetSubscriptionList_Ignore_PC")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetSubscriptionListIgnorePC();

    /**
     * Retrieves Event List
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetEventList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetEventList();

    /**
     * Retrieves Event List By Name
     * 
     * @param eventName
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetEventListByName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetEventListByName(
        @WebParam(name = "EventName", partName = "EventName")
        String eventName);

    /**
     * Retrieves List of event keys
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetEventListKeys")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetEventListKeys();

    /**
     * Retrieves All Event Registrant Type List
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetEventRegistrantTypeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetEventRegistrantTypeList();

    /**
     * Retrieves Housing Room Type List
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetEventRegistrantRoomTypeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetEventRegistrantRoomTypeList();

    /**
     * Retrieves Event Registrant Type List
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetEventRegistrantSourceCodeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetEventRegistrantSourceCodeList();

    /**
     * Retrieves Gift List
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGiftGetGiftProductList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGiftGetGiftProductList();

    /**
     * Retrieves Gift List By Name
     * 
     * @param giftName
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGiftGetGiftProductListByName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGiftGetGiftProductListByName(
        @WebParam(name = "GiftName", partName = "GiftName")
        String giftName);

    /**
     * Retrieves List of gift keys
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGiftGetGiftProductListKeys")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGiftGetGiftProductListKeys();

    /**
     * Retrieves All Gift Type List (selected value should be set to gft_gty_key)
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGiftGetGiftTypeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGiftGetGiftTypeList();

    /**
     * Retrieves Memembership Package List; the package product key mbr_pak_prd_key can be set in the membership object with the value of asp_pak_prd_key returned in this list.
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartMembershipGetPackageList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartMembershipGetPackageList();

    /**
     * Retrieves Memembership Type List.
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartMembershipGetMembershipTypeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartMembershipGetMembershipTypeList();

    /**
     * Retrieves Membership Package List By Name
     * 
     * @param packageName
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartMembershipGetPackageListByName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartMembershipGetPackageListByName(
        @WebParam(name = "PackageName", partName = "PackageName")
        String packageName);

    /**
     * Retrieves List of package keys
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartMembershipGetPackageListKeys")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartMembershipGetPackageListKeys();

    /**
     * Returns a list of exhibits
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartExhibitorGetExhibitList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartExhibitorGetExhibitList();

    /**
     * Retrieves Installment Frequency Options. Assign ord_frequency to desired value. To generate Installments, set values for the following fields: ord_num_of_installments, ord_frequency, ord_ait_key
     * 
     */
    @WebMethod(operationName = "WEBCentralizedShoppingCartGetInstallmentFrequencyOptions")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCentralizedShoppingCartGetInstallmentFrequencyOptions();

    /**
     * 
     * @return
     *     returns javax.xml.datatype.XMLGregorianCalendar
     */
    @WebMethod(operationName = "GetDateTime")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public XMLGregorianCalendar getDateTime();

    /**
     * Retrieves the column values for DropDownLists and ListBoxes.
     * 
     * @param columnName
     * @return
     *     returns com.avectra._2005.ArrayOfAvailableValue
     */
    @WebMethod(operationName = "WEBColumnGetColumnValuesByColumnName")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public ArrayOfAvailableValue webColumnGetColumnValuesByColumnName(
        @WebParam(name = "ColumnName", partName = "ColumnName")
        String columnName);

    /**
     * Get available promotional mailing types available for customers
     * 
     * @return
     *     returns com.avectra._2005.ArrayOfMailingList
     */
    @WebMethod(operationName = "GetPromotionalMailingTypes")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public ArrayOfMailingList getPromotionalMailingTypes();

    /**
     * Get available subscription mailing types available for customers
     * 
     * @return
     *     returns com.avectra._2005.ArrayOfMailingList
     */
    @WebMethod(operationName = "GetSubscriptionMailingTypes")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public ArrayOfMailingList getSubscriptionMailingTypes();

    /**
     * Retrieve an individual's contact preference for a single mailing type.
     * 
     * @param customerKey
     * @param preferenceTypeKey
     * @return
     *     returns com.avectra._2005.MailingListSetting
     */
    @WebMethod(operationName = "GetCustomerCommunicationPreference")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public MailingListSetting getCustomerCommunicationPreference(
        @WebParam(name = "customerKey", partName = "customerKey")
        String customerKey,
        @WebParam(name = "preferenceTypeKey", partName = "preferenceTypeKey")
        String preferenceTypeKey);

    /**
     * Retrieve an individual's contact preferences.
     * 
     * @param customerKey
     * @return
     *     returns com.avectra._2005.ArrayOfMailingListSetting
     */
    @WebMethod(operationName = "GetAllCustomerCommunicationPreferences")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public ArrayOfMailingListSetting getAllCustomerCommunicationPreferences(
        @WebParam(name = "customerKey", partName = "customerKey")
        String customerKey);

    /**
     * Passing correct credentials to this method will return an authentication token - without an authentication token, the rest of the xWeb web methods will be inoperable.  The authentication token is governed by the group privileges assigned to the account invoking the xWeb web methods.  Please consult with the administrator of the netForum database to ensure your level of authorization.  This method MUST be the first method invoked at xWeb, as the authentication token that is returned is required for every xWeb method.
     * 
     * @param userName
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Authenticate")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String authenticate(
        @WebParam(name = "userName", partName = "userName")
        String userName,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * Passing correct credentials to this method will return an authentication token - without an authentication token, the rest of the xWeb web methods will be inoperable.  The authentication token is governed by the group privileges assigned to the account invoking the xWeb web methods.  Please consult with the administrator of the netForum database to ensure your level of authorization.  This method MUST be the first method invoked at xWeb, as the authentication token that is returned is required for every xWeb method.
     * 
     * @param userName
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "AuthenticateLdap")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String authenticateLdap(
        @WebParam(name = "userName", partName = "userName")
        String userName,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * Provides an authentication token for a valid customer login and password.  The value for the login field depends on a netForum Systems Option ("useEmailForAuthorization"), so please check with the netforum administrator for the setting.  If there are more than one record with the exact same login and password combination, then the service will return the first match.  The netForum System Option "hashPassword" is observed for the password value - the service will match the plainText to the ciphered Text in the database.  The keyOverride parameter is an implementation specific parameter (web.config change) to force xWeb to return the customer key (cst_key) for a valid credential.
     * 
     * @param passwordPlain
     * @param userLoginPlain
     * @param keyOverride
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "WebLogin")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String webLogin(
        @WebParam(name = "userLoginPlain", partName = "userLoginPlain")
        String userLoginPlain,
        @WebParam(name = "passwordPlain", partName = "passwordPlain")
        String passwordPlain,
        @WebParam(name = "keyOverride", partName = "keyOverride")
        String keyOverride);

    /**
     * Provides the customer key (cst_key) for the authenticated token that is passed as a parameter - this method can be invoked after a successful WebLogin() method returns an authentication token.  The authentication token is the only parameter for this method.
     * 
     * @param authenticationToken
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "WebValidate")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String webValidate(
        @WebParam(name = "authenticationToken", partName = "authenticationToken")
        String authenticationToken);

    /**
     * Forces the authentication token to be destroyed - this method is the companion method to the WebLogin() method or the WebValidate() method.  xWeb doesn't return an Xml Node for success.
     * 
     * @param authenticationToken
     */
    @WebMethod(operationName = "WebLogout")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webLogout(
        @WebParam(name = "authenticationToken", partName = "authenticationToken")
        String authenticationToken);

    /**
     * Provides a means of retrieving single or multiple data records and returns either the specific columns (pruning the number of elements is governed by how the netforum facade object was constructed, for example, the one-to-many relationships cannot be rendered in a flat-view - in these cases, no value will be returned for the impacted elements) or the complete Facade object record (returning all the fields associated with a netForum Facade object can be done by passing a * as the sole value for the szColumnList value).
     * 
     * @param szObjectName
     * @param szOrderBy
     * @param szColumnList
     * @param szWhereClause
     */
    @WebMethod(operationName = "GetQuery")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getQuery(
        @WebParam(name = "szObjectName", partName = "szObjectName")
        String szObjectName,
        @WebParam(name = "szColumnList", partName = "szColumnList")
        String szColumnList,
        @WebParam(name = "szWhereClause", partName = "szWhereClause")
        String szWhereClause,
        @WebParam(name = "szOrderBy", partName = "szOrderBy")
        String szOrderBy);

    /**
     * Retrieve definition of an iWeb Dynamic Query
     * 
     * @param szObjectName
     * @param queKey
     * @param szQueryName
     * @return
     *     returns com.avectra._2005.QueryDefinition
     */
    @WebMethod(operationName = "GetDynamicQueryDefinition")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public QueryDefinition getDynamicQueryDefinition(
        @WebParam(name = "szObjectName", partName = "szObjectName")
        String szObjectName,
        @WebParam(name = "szQueryName", partName = "szQueryName")
        String szQueryName,
        @WebParam(name = "que_key", partName = "que_key")
        String queKey);

    /**
     * Returns XmlNode with List Table definition for a given netFORUM Object.  This information is provided for documentation for using the GetQuery web method.
     * 
     * @param szObjectName
     * @return
     *     returns com.avectra._2005.Object
     */
    @WebMethod(operationName = "GetQueryDefinition")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public Object getQueryDefinition(
        @WebParam(name = "szObjectName", partName = "szObjectName")
        String szObjectName);

    /**
     * Provides a W3C XML Schema for any netFORUM Facade object.  The only parameter for this method is a valid ObjectName - the textual display name of the object for which the Xml Schema document is being requested (individual, address, etc.).  The Xml Schema document that is returned contains the data relationships, the datatypes, and the documentation for each element and group.  In short, this method returns a complete snapshot of the netForum Facade object.
     * 
     * @param szObjectName
     */
    @WebMethod(operationName = "GetFacadeXMLSchema")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getFacadeXMLSchema(
        @WebParam(name = "szObjectName", partName = "szObjectName")
        String szObjectName);

    /**
     * Retrieves the complete list of netForum Facade Objects that can be invoked.
     * 
     */
    @WebMethod(operationName = "GetFacadeObjectList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getFacadeObjectList();

    /**
     * Returns all the fields and related data for the requested object.  This method is marked for removal - the GetQuery() method returns same functionality.
     * 
     * @param szObjectName
     * @param szObjectKey
     */
    @WebMethod(operationName = "GetFacadeObject")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getFacadeObject(
        @WebParam(name = "szObjectName", partName = "szObjectName")
        String szObjectName,
        @WebParam(name = "szObjectKey", partName = "szObjectKey")
        String szObjectKey);

    /**
     * Returns basic contact information for the individual.
     * 
     * @param individualKey
     */
    @WebMethod(operationName = "GetIndividualInformation")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getIndividualInformation(
        @WebParam(name = "IndividualKey", partName = "IndividualKey")
        String individualKey);

    /**
     * Returns basic contact information for the organization.
     * 
     * @param organizationKey
     */
    @WebMethod(operationName = "GetOrganizationInformation")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getOrganizationInformation(
        @WebParam(name = "OrganizationKey", partName = "OrganizationKey")
        String organizationKey);

    /**
     * Return a list of available action types.
     * 
     */
    @WebMethod(operationName = "GetActionTypeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getActionTypeList();

    /**
     * Return a list of cst of the IP.
     * 
     * @param oIPAddress
     */
    @WebMethod(operationName = "ElectronicSubscriptionGetCustomerListByIP")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void electronicSubscriptionGetCustomerListByIP(
        @WebParam(name = "oIPAddress", partName = "oIPAddress")
        String oIPAddress);

    /**
     * Provides version  information about the xWeb application and Database Server and Name.
     * 
     * @return
     *     returns com.avectra._2005.XWebVersion
     */
    @WebMethod(operationName = "GetVersion")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public XWebVersion getVersion();

    /**
     * Tests the applications connection to the database.
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "TestConnection")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String testConnection();

    /**
     * Get a list of all the time zones defined in netFORUM.
     * 
     */
    @WebMethod(operationName = "GetTimeZones")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getTimeZones();

    /**
     * Returns a list of Module groups for the merging of customers.
     * 
     */
    @WebMethod(operationName = "GetMergeCustomerModules")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void getMergeCustomerModules();

    /**
     * Retrieves WEB integration relevent system options.
     * 
     */
    @WebMethod(operationName = "WEBGetSystemOptions")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webGetSystemOptions();

    /**
     * Updates a netForum System Option and returns the modified netForum Facade object record. Parameters: szOptionName, szOptionValue. Returns true if successful, false otherwise.
     * 
     * @param szOptionName
     * @param szOptionValue
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "WEBUpdateSystemOption")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public boolean webUpdateSystemOption(
        @WebParam(name = "szOptionName", partName = "szOptionName")
        String szOptionName,
        @WebParam(name = "szOptionValue", partName = "szOptionValue")
        String szOptionValue);

    /**
     * Retrieves netForum roles.
     * 
     */
    @WebMethod(operationName = "WEBGetAllRoles")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webGetAllRoles();

    /**
     * Matches username to specified role and returns matching usernames.
     * 
     * @param usernameToMatch
     * @param roleName
     */
    @WebMethod(operationName = "WEBFindUsersInRole")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webFindUsersInRole(
        @WebParam(name = "roleName", partName = "roleName")
        String roleName,
        @WebParam(name = "usernameToMatch", partName = "usernameToMatch")
        String usernameToMatch);

    /**
     * Retrieves all roles for specified username.
     * 
     * @param username
     */
    @WebMethod(operationName = "WEBGetRolesForUser")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webGetRolesForUser(
        @WebParam(name = "username", partName = "username")
        String username);

    /**
     * Retrieves all users in a specified role.
     * 
     * @param roleName
     */
    @WebMethod(operationName = "WEBGetUsersInRole")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webGetUsersInRole(
        @WebParam(name = "roleName", partName = "roleName")
        String roleName);

    /**
     * Returns a boolean indicating if the user is in the specified role.
     * 
     * @param username
     * @param roleName
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "WEBIsUserInRole")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public boolean webIsUserInRole(
        @WebParam(name = "username", partName = "username")
        String username,
        @WebParam(name = "roleName", partName = "roleName")
        String roleName);

    /**
     * Returns a boolean indicating if the specified role exists.
     * 
     * @param roleName
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "WEBRoleExists")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public boolean webRoleExists(
        @WebParam(name = "roleName", partName = "roleName")
        String roleName);

    /**
     * Changes the user password. Returns true if successful, false otherwise.
     * 
     * @param recno
     * @param newPassword
     * @param oldPassword
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "WEBWebUserChangePassword")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public boolean webWebUserChangePassword(
        @WebParam(name = "recno", partName = "recno")
        String recno,
        @WebParam(name = "oldPassword", partName = "oldPassword")
        String oldPassword,
        @WebParam(name = "newPassword", partName = "newPassword")
        String newPassword);

    /**
     * Matches username to specified email and returns matching users.
     * 
     * @param emailToMatch
     */
    @WebMethod(operationName = "WEBWebUserFindUsersByEmail")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webWebUserFindUsersByEmail(
        @WebParam(name = "emailToMatch", partName = "emailToMatch")
        String emailToMatch);

    /**
     * Matches username to domain and returns matching users.
     * 
     * @param domainToMatch
     */
    @WebMethod(operationName = "WEBWebUserFindUsersByDomain")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webWebUserFindUsersByDomain(
        @WebParam(name = "domainToMatch", partName = "domainToMatch")
        String domainToMatch);

    /**
     * Matches organizations to domain and returns matching organizations.
     * 
     * @param domainToMatch
     */
    @WebMethod(operationName = "WEBWebUserFindOrganizationsByDomain")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webWebUserFindOrganizationsByDomain(
        @WebParam(name = "domainToMatch", partName = "domainToMatch")
        String domainToMatch);

    /**
     * returns web users with a matching userName, firstName or lastName.
     * 
     * @param usernameToMatch
     */
    @WebMethod(operationName = "WEBWebUserFindUsersByName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webWebUserFindUsersByName(
        @WebParam(name = "usernameToMatch", partName = "usernameToMatch")
        String usernameToMatch);

    /**
     * returns web users with a matching userName, firstName and lastName.
     * 
     * @param lastnameToMatch
     * @param firstnameToMatch
     * @param usernameToMatch
     */
    @WebMethod(operationName = "WEBWebUserFindUsersByUserNameFirstNameLastName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webWebUserFindUsersByUserNameFirstNameLastName(
        @WebParam(name = "usernameToMatch", partName = "usernameToMatch")
        String usernameToMatch,
        @WebParam(name = "firstnameToMatch", partName = "firstnameToMatch")
        String firstnameToMatch,
        @WebParam(name = "lastnameToMatch", partName = "lastnameToMatch")
        String lastnameToMatch);

    /**
     * returns web user info.
     * 
     * @param cstKey
     * @return
     *     returns com.avectra._2005.WebUserType
     */
    @WebMethod(operationName = "WEBWebUserGet")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public WebUserType webWebUserGet(
        @WebParam(name = "cst_key", partName = "cst_key")
        String cstKey);

    /**
     * returns web user info.
     * 
     * @param cstRecno
     * @return
     *     returns com.avectra._2005.WebUserType
     */
    @WebMethod(operationName = "WEBWebUserGetByRecno_Custom")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public WebUserType webWebUserGetByRecnoCustom(
        @WebParam(name = "cst_recno", partName = "cst_recno")
        String cstRecno);

    /**
     * unlock the web user. Returns true if successful, false otherwise.
     * 
     * @param cstRecno
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "WEBWebUserUnlock")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public boolean webWebUserUnlock(
        @WebParam(name = "cst_recno", partName = "cst_recno")
        String cstRecno);

    /**
     * lock-out the web user. Returns true if successful, false otherwise.
     * 
     * @param cstRecno
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "WEBWebUserLock")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public boolean webWebUserLock(
        @WebParam(name = "cst_recno", partName = "cst_recno")
        String cstRecno);

    /**
     * pass login id/email and password to validate the web user. Returns Web User Info if successful.
     * 
     * @param password
     * @param loginOrEmail
     * @return
     *     returns com.avectra._2005.WebUserType
     */
    @WebMethod(operationName = "WEBWebUserLogin")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public WebUserType webWebUserLogin(
        @WebParam(name = "LoginOrEmail", partName = "LoginOrEmail")
        String loginOrEmail,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * pass login id/email and password to validate the web user and return a remember-me token. Returns Web User Info if successful.
     * 
     * @param password
     * @param loginOrEmail
     * @return
     *     returns com.avectra._2005.WebUserType
     */
    @WebMethod(operationName = "WEBWebUserLoginAndRememberMe")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public WebUserType webWebUserLoginAndRememberMe(
        @WebParam(name = "LoginOrEmail", partName = "LoginOrEmail")
        String loginOrEmail,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * Provides the Web User info for the authenticated token that is passed as a parameter - this method can be invoked after a successful Login that returns an authentication token.  The authentication token is the only parameter for this method.
     * 
     * @param authenticationToken
     * @return
     *     returns com.avectra._2005.WebUserType
     */
    @WebMethod(operationName = "WEBWebUserLoginByRememberMe")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public WebUserType webWebUserLoginByRememberMe(
        @WebParam(name = "authenticationToken", partName = "authenticationToken")
        String authenticationToken);

    /**
     * pass login id/email and password to validate the web user. Returns Web User info if validated.
     * 
     * @param password
     * @param loginOrEmail
     * @return
     *     returns com.avectra._2005.WebUserType
     */
    @WebMethod(operationName = "WEBWebUserValidateLogin")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public WebUserType webWebUserValidateLogin(
        @WebParam(name = "LoginOrEmail", partName = "LoginOrEmail")
        String loginOrEmail,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * Provides the Web User info for the authenticated token that is passed as a parameter - this method can be invoked after a successful Login that returns an authentication token.  The authentication token is the only parameter for this method.
     * 
     * @param authenticationToken
     * @return
     *     returns com.avectra._2005.WebUserType
     */
    @WebMethod(operationName = "WEBWebUserValidateToken")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public WebUserType webWebUserValidateToken(
        @WebParam(name = "authenticationToken", partName = "authenticationToken")
        String authenticationToken);

    /**
     * pass login id/email and password to validate the web user. Returns cst_recno/username if successful.
     * 
     * @param password
     * @param loginOrEmail
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "WEBWebUserLogin_Custom")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String webWebUserLoginCustom(
        @WebParam(name = "LoginOrEmail", partName = "LoginOrEmail")
        String loginOrEmail,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * pass login id/email and password to validate the web user. Returns cst_recno/username if successful.
     * 
     * @param password
     * @param cstRecno
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "WEBWebUserLoginByRecno_Custom")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String webWebUserLoginByRecnoCustom(
        @WebParam(name = "cst_recno", partName = "cst_recno")
        String cstRecno,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * pass login id/email and password to validate the web user. Returns cst_recno/username if validated.
     * 
     * @param password
     * @param loginOrEmail
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "WEBWebUserValidateLogin_Custom")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String webWebUserValidateLoginCustom(
        @WebParam(name = "LoginOrEmail", partName = "LoginOrEmail")
        String loginOrEmail,
        @WebParam(name = "password", partName = "password")
        String password);

    /**
     * Provides the cst_recno for the authenticated token that is passed as a parameter - this method can be invoked after a successful Login that returns an authentication token.  The authentication token is the only parameter for this method.
     * 
     * @param authenticationToken
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "WEBWebUserValidateToken_Custom")
    @WebResult(name = "Body", partName = "Body")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public String webWebUserValidateTokenCustom(
        @WebParam(name = "authenticationToken", partName = "authenticationToken")
        String authenticationToken);

    /**
     * Retrieves a list of individual prefixes. A prefix code can be assigned to ind_prf_code when inserting/updating an individual.
     * 
     */
    @WebMethod(operationName = "WEBIndividualGetPrefixes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webIndividualGetPrefixes();

    /**
     * Retrieves a list of individual suffixes. A suffix code can be assigned to ind_sfx_code when inserting/updating an individual.
     * 
     */
    @WebMethod(operationName = "WEBIndividualGetSuffixes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webIndividualGetSuffixes();

    /**
     * Retrieves a list of address types. An address type key can be assigned to cxa_adt_key when inserting/updating an address.
     * 
     */
    @WebMethod(operationName = "WEBAddressGetTypes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webAddressGetTypes();

    /**
     * Retrieves a list of countries. A country code can be assigned to adr_country when inserting/updating an address.
     * 
     */
    @WebMethod(operationName = "WEBAddressGetCountries")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webAddressGetCountries();

    /**
     * Retrieves a list of states. A state code can be assigned to adr_state when inserting/updating an address.
     * 
     */
    @WebMethod(operationName = "WEBAddressGetStates")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webAddressGetStates();

    /**
     * Retrieves a list of phone types. A phone type key can be assigned to cph_pht_key when inserting/updating a phone number.
     * 
     */
    @WebMethod(operationName = "WEBPhoneGetTypes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webPhoneGetTypes();

    /**
     * Retrieves a list of fax types. A fax type key can be assigned to cfx_fxt_key when inserting/updating a fax number.
     * 
     */
    @WebMethod(operationName = "WEBFaxGetTypes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webFaxGetTypes();

    /**
     * Retrieves a list of organization types. The organization type code can be assigned to org_ogt_code when inserting/updating an organization.
     * 
     */
    @WebMethod(operationName = "WEBOrganizationGetTypes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webOrganizationGetTypes();

    /**
     * Retrieves a list of contact request originations.
     * 
     */
    @WebMethod(operationName = "WEBContactRequestGetOriginations")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webContactRequestGetOriginations();

    /**
     * Retrieves a list of contact request priorities.
     * 
     */
    @WebMethod(operationName = "WEBContactRequestGetPriorities")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webContactRequestGetPriorities();

    /**
     * Retrieves a list of contact request types.
     * 
     */
    @WebMethod(operationName = "WEBContactRequestGetRequestTypes")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webContactRequestGetRequestTypes();

    /**
     * Retrieves a list of contact request reasons for all types.
     * 
     */
    @WebMethod(operationName = "WEBContactRequestGetRequestTypeReasons")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webContactRequestGetRequestTypeReasons();

    /**
     * Retrieves a list of contact request statuses.
     * 
     */
    @WebMethod(operationName = "WEBContactRequestGetStatuses")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webContactRequestGetStatuses();

    /**
     * Retrieves List of Active Committees.
     * 
     */
    @WebMethod(operationName = "WEBCommitteeGetCommitteeList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCommitteeGetCommitteeList();

    /**
     * Retrieves List of Active Committees by name.
     * 
     * @param committeeName
     */
    @WebMethod(operationName = "WEBCommitteeGetCommitteeListByName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webCommitteeGetCommitteeListByName(
        @WebParam(name = "CommitteeName", partName = "CommitteeName")
        String committeeName);

    /**
     * Searches the membership directory.
     * 
     * @param lastName
     * @param organizationName
     * @param state
     * @param firstName
     * @param country
     * @param city
     */
    @WebMethod(operationName = "WEBMemberDirectorySearch")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webMemberDirectorySearch(
        @WebParam(name = "FirstName", partName = "FirstName")
        String firstName,
        @WebParam(name = "LastName", partName = "LastName")
        String lastName,
        @WebParam(name = "OrganizationName", partName = "OrganizationName")
        String organizationName,
        @WebParam(name = "City", partName = "City")
        String city,
        @WebParam(name = "State", partName = "State")
        String state,
        @WebParam(name = "Country", partName = "Country")
        String country);

    /**
     * Searches the membership directory.
     * 
     * @param organizationAcronym
     * @param organizationName
     * @param state
     * @param country
     * @param city
     * @param organizationType
     */
    @WebMethod(operationName = "WEBMemberDirectoryOrganizationSearch")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webMemberDirectoryOrganizationSearch(
        @WebParam(name = "OrganizationAcronym", partName = "OrganizationAcronym")
        String organizationAcronym,
        @WebParam(name = "OrganizationName", partName = "OrganizationName")
        String organizationName,
        @WebParam(name = "OrganizationType", partName = "OrganizationType")
        String organizationType,
        @WebParam(name = "City", partName = "City")
        String city,
        @WebParam(name = "State", partName = "State")
        String state,
        @WebParam(name = "Country", partName = "Country")
        String country);

    /**
     * Retrieves list of chapters.
     * 
     */
    @WebMethod(operationName = "WEBChaptersGetChapterList")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webChaptersGetChapterList();

    /**
     * Retrieves list of chapters by name.
     * 
     * @param chapterName
     */
    @WebMethod(operationName = "WEBChaptersGetChapterListByName")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public void webChaptersGetChapterListByName(
        @WebParam(name = "ChapterName", partName = "ChapterName")
        String chapterName);

}
